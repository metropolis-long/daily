package com.daily.pojo;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class DiaryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table diary
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table diary
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table diary
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table diary
     *
     * @mbggenerated
     */
    public DiaryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table diary
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table diary
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table diary
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table diary
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table diary
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table diary
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table diary
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table diary
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table diary
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table diary
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table diary
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDiaryIdIsNull() {
            addCriterion("diary_id is null");
            return (Criteria) this;
        }

        public Criteria andDiaryIdIsNotNull() {
            addCriterion("diary_id is not null");
            return (Criteria) this;
        }

        public Criteria andDiaryIdEqualTo(Long value) {
            addCriterion("diary_id =", value, "diaryId");
            return (Criteria) this;
        }

        public Criteria andDiaryIdNotEqualTo(Long value) {
            addCriterion("diary_id <>", value, "diaryId");
            return (Criteria) this;
        }

        public Criteria andDiaryIdGreaterThan(Long value) {
            addCriterion("diary_id >", value, "diaryId");
            return (Criteria) this;
        }

        public Criteria andDiaryIdGreaterThanOrEqualTo(Long value) {
            addCriterion("diary_id >=", value, "diaryId");
            return (Criteria) this;
        }

        public Criteria andDiaryIdLessThan(Long value) {
            addCriterion("diary_id <", value, "diaryId");
            return (Criteria) this;
        }

        public Criteria andDiaryIdLessThanOrEqualTo(Long value) {
            addCriterion("diary_id <=", value, "diaryId");
            return (Criteria) this;
        }

        public Criteria andDiaryIdIn(List<Long> values) {
            addCriterion("diary_id in", values, "diaryId");
            return (Criteria) this;
        }

        public Criteria andDiaryIdNotIn(List<Long> values) {
            addCriterion("diary_id not in", values, "diaryId");
            return (Criteria) this;
        }

        public Criteria andDiaryIdBetween(Long value1, Long value2) {
            addCriterion("diary_id between", value1, value2, "diaryId");
            return (Criteria) this;
        }

        public Criteria andDiaryIdNotBetween(Long value1, Long value2) {
            addCriterion("diary_id not between", value1, value2, "diaryId");
            return (Criteria) this;
        }

        public Criteria andDiaryContextIsNull() {
            addCriterion("diary_context is null");
            return (Criteria) this;
        }

        public Criteria andDiaryContextIsNotNull() {
            addCriterion("diary_context is not null");
            return (Criteria) this;
        }

        public Criteria andDiaryContextEqualTo(String value) {
            addCriterion("diary_context =", value, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDiaryContextNotEqualTo(String value) {
            addCriterion("diary_context <>", value, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDiaryContextGreaterThan(String value) {
            addCriterion("diary_context >", value, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDiaryContextGreaterThanOrEqualTo(String value) {
            addCriterion("diary_context >=", value, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDiaryContextLessThan(String value) {
            addCriterion("diary_context <", value, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDiaryContextLessThanOrEqualTo(String value) {
            addCriterion("diary_context <=", value, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDiaryContextLike(String value) {
            addCriterion("diary_context like", value, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDiaryContextNotLike(String value) {
            addCriterion("diary_context not like", value, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDiaryContextIn(List<String> values) {
            addCriterion("diary_context in", values, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDiaryContextNotIn(List<String> values) {
            addCriterion("diary_context not in", values, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDiaryContextBetween(String value1, String value2) {
            addCriterion("diary_context between", value1, value2, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDiaryContextNotBetween(String value1, String value2) {
            addCriterion("diary_context not between", value1, value2, "diaryContext");
            return (Criteria) this;
        }

        public Criteria andDialyDateIsNull() {
            addCriterion("dialy_date is null");
            return (Criteria) this;
        }

        public Criteria andDialyDateIsNotNull() {
            addCriterion("dialy_date is not null");
            return (Criteria) this;
        }

        public Criteria andDialyDateEqualTo(Date value) {
            addCriterion("dialy_date =", value, "dialyDate");
            return (Criteria) this;
        }

        public Criteria andDialyDateNotEqualTo(Date value) {
            addCriterion("dialy_date <>", value, "dialyDate");
            return (Criteria) this;
        }

        public Criteria andDialyDateGreaterThan(Date value) {
            addCriterion("dialy_date >", value, "dialyDate");
            return (Criteria) this;
        }

        public Criteria andDialyDateGreaterThanOrEqualTo(Date value) {
            addCriterion("dialy_date >=", value, "dialyDate");
            return (Criteria) this;
        }

        public Criteria andDialyDateLessThan(Date value) {
            addCriterion("dialy_date <", value, "dialyDate");
            return (Criteria) this;
        }

        public Criteria andDialyDateLessThanOrEqualTo(Date value) {
            addCriterion("dialy_date <=", value, "dialyDate");
            return (Criteria) this;
        }

        public Criteria andDialyDateIn(List<Date> values) {
            addCriterion("dialy_date in", values, "dialyDate");
            return (Criteria) this;
        }

        public Criteria andDialyDateNotIn(List<Date> values) {
            addCriterion("dialy_date not in", values, "dialyDate");
            return (Criteria) this;
        }

        public Criteria andDialyDateBetween(Date value1, Date value2) {
            addCriterion("dialy_date between", value1, value2, "dialyDate");
            return (Criteria) this;
        }

        public Criteria andDialyDateNotBetween(Date value1, Date value2) {
            addCriterion("dialy_date not between", value1, value2, "dialyDate");
            return (Criteria) this;
        }

        public Criteria andMoodTypeIsNull() {
            addCriterion("mood_type is null");
            return (Criteria) this;
        }

        public Criteria andMoodTypeIsNotNull() {
            addCriterion("mood_type is not null");
            return (Criteria) this;
        }

        public Criteria andMoodTypeEqualTo(Integer value) {
            addCriterion("mood_type =", value, "moodType");
            return (Criteria) this;
        }

        public Criteria andMoodTypeNotEqualTo(Integer value) {
            addCriterion("mood_type <>", value, "moodType");
            return (Criteria) this;
        }

        public Criteria andMoodTypeGreaterThan(Integer value) {
            addCriterion("mood_type >", value, "moodType");
            return (Criteria) this;
        }

        public Criteria andMoodTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("mood_type >=", value, "moodType");
            return (Criteria) this;
        }

        public Criteria andMoodTypeLessThan(Integer value) {
            addCriterion("mood_type <", value, "moodType");
            return (Criteria) this;
        }

        public Criteria andMoodTypeLessThanOrEqualTo(Integer value) {
            addCriterion("mood_type <=", value, "moodType");
            return (Criteria) this;
        }

        public Criteria andMoodTypeIn(List<Integer> values) {
            addCriterion("mood_type in", values, "moodType");
            return (Criteria) this;
        }

        public Criteria andMoodTypeNotIn(List<Integer> values) {
            addCriterion("mood_type not in", values, "moodType");
            return (Criteria) this;
        }

        public Criteria andMoodTypeBetween(Integer value1, Integer value2) {
            addCriterion("mood_type between", value1, value2, "moodType");
            return (Criteria) this;
        }

        public Criteria andMoodTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("mood_type not between", value1, value2, "moodType");
            return (Criteria) this;
        }

        public Criteria andMoodIsNull() {
            addCriterion("mood is null");
            return (Criteria) this;
        }

        public Criteria andMoodIsNotNull() {
            addCriterion("mood is not null");
            return (Criteria) this;
        }

        public Criteria andMoodEqualTo(String value) {
            addCriterion("mood =", value, "mood");
            return (Criteria) this;
        }

        public Criteria andMoodNotEqualTo(String value) {
            addCriterion("mood <>", value, "mood");
            return (Criteria) this;
        }

        public Criteria andMoodGreaterThan(String value) {
            addCriterion("mood >", value, "mood");
            return (Criteria) this;
        }

        public Criteria andMoodGreaterThanOrEqualTo(String value) {
            addCriterion("mood >=", value, "mood");
            return (Criteria) this;
        }

        public Criteria andMoodLessThan(String value) {
            addCriterion("mood <", value, "mood");
            return (Criteria) this;
        }

        public Criteria andMoodLessThanOrEqualTo(String value) {
            addCriterion("mood <=", value, "mood");
            return (Criteria) this;
        }

        public Criteria andMoodLike(String value) {
            addCriterion("mood like", value, "mood");
            return (Criteria) this;
        }

        public Criteria andMoodNotLike(String value) {
            addCriterion("mood not like", value, "mood");
            return (Criteria) this;
        }

        public Criteria andMoodIn(List<String> values) {
            addCriterion("mood in", values, "mood");
            return (Criteria) this;
        }

        public Criteria andMoodNotIn(List<String> values) {
            addCriterion("mood not in", values, "mood");
            return (Criteria) this;
        }

        public Criteria andMoodBetween(String value1, String value2) {
            addCriterion("mood between", value1, value2, "mood");
            return (Criteria) this;
        }

        public Criteria andMoodNotBetween(String value1, String value2) {
            addCriterion("mood not between", value1, value2, "mood");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNull() {
            addCriterion("temperature is null");
            return (Criteria) this;
        }

        public Criteria andTemperatureIsNotNull() {
            addCriterion("temperature is not null");
            return (Criteria) this;
        }

        public Criteria andTemperatureEqualTo(BigDecimal value) {
            addCriterion("temperature =", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotEqualTo(BigDecimal value) {
            addCriterion("temperature <>", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThan(BigDecimal value) {
            addCriterion("temperature >", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("temperature >=", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThan(BigDecimal value) {
            addCriterion("temperature <", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureLessThanOrEqualTo(BigDecimal value) {
            addCriterion("temperature <=", value, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureIn(List<BigDecimal> values) {
            addCriterion("temperature in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotIn(List<BigDecimal> values) {
            addCriterion("temperature not in", values, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("temperature between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andTemperatureNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("temperature not between", value1, value2, "temperature");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeIsNull() {
            addCriterion("weather_type is null");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeIsNotNull() {
            addCriterion("weather_type is not null");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeEqualTo(Integer value) {
            addCriterion("weather_type =", value, "weatherType");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeNotEqualTo(Integer value) {
            addCriterion("weather_type <>", value, "weatherType");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeGreaterThan(Integer value) {
            addCriterion("weather_type >", value, "weatherType");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("weather_type >=", value, "weatherType");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeLessThan(Integer value) {
            addCriterion("weather_type <", value, "weatherType");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeLessThanOrEqualTo(Integer value) {
            addCriterion("weather_type <=", value, "weatherType");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeIn(List<Integer> values) {
            addCriterion("weather_type in", values, "weatherType");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeNotIn(List<Integer> values) {
            addCriterion("weather_type not in", values, "weatherType");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeBetween(Integer value1, Integer value2) {
            addCriterion("weather_type between", value1, value2, "weatherType");
            return (Criteria) this;
        }

        public Criteria andWeatherTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("weather_type not between", value1, value2, "weatherType");
            return (Criteria) this;
        }

        public Criteria andWeatherIsNull() {
            addCriterion("weather is null");
            return (Criteria) this;
        }

        public Criteria andWeatherIsNotNull() {
            addCriterion("weather is not null");
            return (Criteria) this;
        }

        public Criteria andWeatherEqualTo(String value) {
            addCriterion("weather =", value, "weather");
            return (Criteria) this;
        }

        public Criteria andWeatherNotEqualTo(String value) {
            addCriterion("weather <>", value, "weather");
            return (Criteria) this;
        }

        public Criteria andWeatherGreaterThan(String value) {
            addCriterion("weather >", value, "weather");
            return (Criteria) this;
        }

        public Criteria andWeatherGreaterThanOrEqualTo(String value) {
            addCriterion("weather >=", value, "weather");
            return (Criteria) this;
        }

        public Criteria andWeatherLessThan(String value) {
            addCriterion("weather <", value, "weather");
            return (Criteria) this;
        }

        public Criteria andWeatherLessThanOrEqualTo(String value) {
            addCriterion("weather <=", value, "weather");
            return (Criteria) this;
        }

        public Criteria andWeatherLike(String value) {
            addCriterion("weather like", value, "weather");
            return (Criteria) this;
        }

        public Criteria andWeatherNotLike(String value) {
            addCriterion("weather not like", value, "weather");
            return (Criteria) this;
        }

        public Criteria andWeatherIn(List<String> values) {
            addCriterion("weather in", values, "weather");
            return (Criteria) this;
        }

        public Criteria andWeatherNotIn(List<String> values) {
            addCriterion("weather not in", values, "weather");
            return (Criteria) this;
        }

        public Criteria andWeatherBetween(String value1, String value2) {
            addCriterion("weather between", value1, value2, "weather");
            return (Criteria) this;
        }

        public Criteria andWeatherNotBetween(String value1, String value2) {
            addCriterion("weather not between", value1, value2, "weather");
            return (Criteria) this;
        }

        public Criteria andStatusIdIsNull() {
            addCriterion("status_id is null");
            return (Criteria) this;
        }

        public Criteria andStatusIdIsNotNull() {
            addCriterion("status_id is not null");
            return (Criteria) this;
        }

        public Criteria andStatusIdEqualTo(Short value) {
            addCriterion("status_id =", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdNotEqualTo(Short value) {
            addCriterion("status_id <>", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdGreaterThan(Short value) {
            addCriterion("status_id >", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdGreaterThanOrEqualTo(Short value) {
            addCriterion("status_id >=", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdLessThan(Short value) {
            addCriterion("status_id <", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdLessThanOrEqualTo(Short value) {
            addCriterion("status_id <=", value, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdIn(List<Short> values) {
            addCriterion("status_id in", values, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdNotIn(List<Short> values) {
            addCriterion("status_id not in", values, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdBetween(Short value1, Short value2) {
            addCriterion("status_id between", value1, value2, "statusId");
            return (Criteria) this;
        }

        public Criteria andStatusIdNotBetween(Short value1, Short value2) {
            addCriterion("status_id not between", value1, value2, "statusId");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("created is null");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("created is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("created =", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("created <>", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("created >", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("created >=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("created <", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("created <=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("created in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("created not in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("created between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("created not between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNull() {
            addCriterion("updated is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNotNull() {
            addCriterion("updated is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedEqualTo(Date value) {
            addCriterion("updated =", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotEqualTo(Date value) {
            addCriterion("updated <>", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThan(Date value) {
            addCriterion("updated >", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThanOrEqualTo(Date value) {
            addCriterion("updated >=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThan(Date value) {
            addCriterion("updated <", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThanOrEqualTo(Date value) {
            addCriterion("updated <=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedIn(List<Date> values) {
            addCriterion("updated in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotIn(List<Date> values) {
            addCriterion("updated not in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedBetween(Date value1, Date value2) {
            addCriterion("updated between", value1, value2, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotBetween(Date value1, Date value2) {
            addCriterion("updated not between", value1, value2, "updated");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table diary
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table diary
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}