<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daily.dao.auto.CommentMapper">
  <resultMap id="BaseResultMap" type="com.daily.pojo.Comment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="comment_id" jdbcType="BIGINT" property="commentId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="article_title" jdbcType="VARCHAR" property="articleTitle" />
    <result column="relation_table" jdbcType="VARCHAR" property="relationTable" />
    <result column="parent_comment_id" jdbcType="BIGINT" property="parentCommentId" />
    <result column="parent_comment_user_id" jdbcType="BIGINT" property="parentCommentUserId" />
    <result column="reply_comment_id" jdbcType="BIGINT" property="replyCommentId" />
    <result column="reply_comment_user_id" jdbcType="BIGINT" property="replyCommentUserId" />
    <result column="comment_level" jdbcType="INTEGER" property="commentLevel" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="status_id" jdbcType="INTEGER" property="statusId" />
    <result column="praise_num" jdbcType="INTEGER" property="praiseNum" />
    <result column="top_status" jdbcType="TINYINT" property="topStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    comment_id, user_id, user_name, article_id, article_title, relation_table, parent_comment_id, 
    parent_comment_user_id, reply_comment_id, reply_comment_user_id, comment_level, content, 
    status_id, praise_num, top_status, create_time
  </sql>
  <select id="selectByExample" parameterType="com.daily.pojo.CommentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from comment
    where comment_id = #{commentId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.daily.pojo.Comment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="commentId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment (user_id, user_name, article_id, 
      article_title, relation_table, parent_comment_id, 
      parent_comment_user_id, reply_comment_id, reply_comment_user_id, 
      comment_level, content, status_id, 
      praise_num, top_status, create_time
      )
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{articleId,jdbcType=BIGINT}, 
      #{articleTitle,jdbcType=VARCHAR}, #{relationTable,jdbcType=VARCHAR}, #{parentCommentId,jdbcType=BIGINT}, 
      #{parentCommentUserId,jdbcType=BIGINT}, #{replyCommentId,jdbcType=BIGINT}, #{replyCommentUserId,jdbcType=BIGINT}, 
      #{commentLevel,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{statusId,jdbcType=INTEGER}, 
      #{praiseNum,jdbcType=INTEGER}, #{topStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.daily.pojo.Comment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="commentId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="articleTitle != null">
        article_title,
      </if>
      <if test="relationTable != null">
        relation_table,
      </if>
      <if test="parentCommentId != null">
        parent_comment_id,
      </if>
      <if test="parentCommentUserId != null">
        parent_comment_user_id,
      </if>
      <if test="replyCommentId != null">
        reply_comment_id,
      </if>
      <if test="replyCommentUserId != null">
        reply_comment_user_id,
      </if>
      <if test="commentLevel != null">
        comment_level,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="statusId != null">
        status_id,
      </if>
      <if test="praiseNum != null">
        praise_num,
      </if>
      <if test="topStatus != null">
        top_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="articleTitle != null">
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="relationTable != null">
        #{relationTable,jdbcType=VARCHAR},
      </if>
      <if test="parentCommentId != null">
        #{parentCommentId,jdbcType=BIGINT},
      </if>
      <if test="parentCommentUserId != null">
        #{parentCommentUserId,jdbcType=BIGINT},
      </if>
      <if test="replyCommentId != null">
        #{replyCommentId,jdbcType=BIGINT},
      </if>
      <if test="replyCommentUserId != null">
        #{replyCommentUserId,jdbcType=BIGINT},
      </if>
      <if test="commentLevel != null">
        #{commentLevel,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        #{statusId,jdbcType=INTEGER},
      </if>
      <if test="praiseNum != null">
        #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="topStatus != null">
        #{topStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    <set>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=BIGINT},
      </if>
      <if test="record.articleTitle != null">
        article_title = #{record.articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.relationTable != null">
        relation_table = #{record.relationTable,jdbcType=VARCHAR},
      </if>
      <if test="record.parentCommentId != null">
        parent_comment_id = #{record.parentCommentId,jdbcType=BIGINT},
      </if>
      <if test="record.parentCommentUserId != null">
        parent_comment_user_id = #{record.parentCommentUserId,jdbcType=BIGINT},
      </if>
      <if test="record.replyCommentId != null">
        reply_comment_id = #{record.replyCommentId,jdbcType=BIGINT},
      </if>
      <if test="record.replyCommentUserId != null">
        reply_comment_user_id = #{record.replyCommentUserId,jdbcType=BIGINT},
      </if>
      <if test="record.commentLevel != null">
        comment_level = #{record.commentLevel,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.statusId != null">
        status_id = #{record.statusId,jdbcType=INTEGER},
      </if>
      <if test="record.praiseNum != null">
        praise_num = #{record.praiseNum,jdbcType=INTEGER},
      </if>
      <if test="record.topStatus != null">
        top_status = #{record.topStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    set comment_id = #{record.commentId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_name = #{record.userName,jdbcType=VARCHAR},
      article_id = #{record.articleId,jdbcType=BIGINT},
      article_title = #{record.articleTitle,jdbcType=VARCHAR},
      relation_table = #{record.relationTable,jdbcType=VARCHAR},
      parent_comment_id = #{record.parentCommentId,jdbcType=BIGINT},
      parent_comment_user_id = #{record.parentCommentUserId,jdbcType=BIGINT},
      reply_comment_id = #{record.replyCommentId,jdbcType=BIGINT},
      reply_comment_user_id = #{record.replyCommentUserId,jdbcType=BIGINT},
      comment_level = #{record.commentLevel,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      status_id = #{record.statusId,jdbcType=INTEGER},
      praise_num = #{record.praiseNum,jdbcType=INTEGER},
      top_status = #{record.topStatus,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.daily.pojo.Comment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="articleTitle != null">
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="relationTable != null">
        relation_table = #{relationTable,jdbcType=VARCHAR},
      </if>
      <if test="parentCommentId != null">
        parent_comment_id = #{parentCommentId,jdbcType=BIGINT},
      </if>
      <if test="parentCommentUserId != null">
        parent_comment_user_id = #{parentCommentUserId,jdbcType=BIGINT},
      </if>
      <if test="replyCommentId != null">
        reply_comment_id = #{replyCommentId,jdbcType=BIGINT},
      </if>
      <if test="replyCommentUserId != null">
        reply_comment_user_id = #{replyCommentUserId,jdbcType=BIGINT},
      </if>
      <if test="commentLevel != null">
        comment_level = #{commentLevel,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="statusId != null">
        status_id = #{statusId,jdbcType=INTEGER},
      </if>
      <if test="praiseNum != null">
        praise_num = #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="topStatus != null">
        top_status = #{topStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.daily.pojo.Comment">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update comment
    set user_id = #{userId,jdbcType=BIGINT},
      user_name = #{userName,jdbcType=VARCHAR},
      article_id = #{articleId,jdbcType=BIGINT},
      article_title = #{articleTitle,jdbcType=VARCHAR},
      relation_table = #{relationTable,jdbcType=VARCHAR},
      parent_comment_id = #{parentCommentId,jdbcType=BIGINT},
      parent_comment_user_id = #{parentCommentUserId,jdbcType=BIGINT},
      reply_comment_id = #{replyCommentId,jdbcType=BIGINT},
      reply_comment_user_id = #{replyCommentUserId,jdbcType=BIGINT},
      comment_level = #{commentLevel,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      status_id = #{statusId,jdbcType=INTEGER},
      praise_num = #{praiseNum,jdbcType=INTEGER},
      top_status = #{topStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where comment_id = #{commentId,jdbcType=BIGINT}
  </update>
</mapper>