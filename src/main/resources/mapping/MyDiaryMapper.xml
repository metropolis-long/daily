<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daily.dao.my.DiaryDao">
  <resultMap id="BaseResultMap" type="com.daily.dto.DiaryDTO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="diary_id" jdbcType="BIGINT" property="diaryId" />
    <result column="diary_context" jdbcType="VARCHAR" property="diaryContext" />
    <result column="dialy_date" jdbcType="TIMESTAMP" property="dialyDate" />
    <result column="mood_type" jdbcType="INTEGER" property="moodType" />
    <result column="mood" jdbcType="VARCHAR" property="mood" />
    <result column="temperature" jdbcType="DECIMAL" property="temperature" />
    <result column="weather_type" jdbcType="INTEGER" property="weatherType" />
    <result column="weather" jdbcType="VARCHAR" property="weather" />
    <result column="status_id" jdbcType="SMALLINT" property="statusId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.daily.pojo.Diary">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="diaryContext" jdbcType="LONGVARCHAR" property="diarycontext" />
    <result column="diary_html" jdbcType="LONGVARCHAR" property="diaryHtml" />
  </resultMap>

  <select id="findAllDiary" parameterType="com.daily.search.DailySearch"  resultMap="BaseResultMap">
    select * from diary as d
    left join label on label.relation_id = d.diary_id and label.relation_table=1
    left join user_info on user_info.user_id = d.user_id
    <include refid="diary_sql"/>
    <if test="orderCause != null ">
      order by ${orderCause}
    </if>
    <if test="page != null">
      limit #{page.begin},#{page.length}
    </if>
  </select>
  <select id="count4FindAllDiary" parameterType="com.daily.search.DailySearch" resultType="int">
    select count(*) from (
      select * from diary as d
      <include refid="diary_sql"/>
    )t
  </select>
  <sql id="diary_sql">
    <where>
      <if test="userId">
        and  d.user_id=#{userId}
      </if>
      <if test="diaryId">
        and  d.diary_id=#{diaryId}
      </if>
      <if test="keywords != null ">
        and (
        d.diary_context like #{keywordsLike}
        or d.mood like #{keywordsLike}
        or d.weather like #{keywordsLike}
        )
      </if>
    </where>
    group by d.diary_id
  </sql>
</mapper>