<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.daily.dao.my.LearnDao" >
  <resultMap id="BaseResultMap" type="com.daily.dto.LearnDTO" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="learn_id" property="learnId" jdbcType="BIGINT" />
    <result column="learn_title" property="learnTitle" jdbcType="VARCHAR" />
    <result column="tag" property="tag" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="status_id" jdbcType="INTEGER" property="statusId" />
    <result column="updated" property="updated" jdbcType="TIMESTAMP" />
    <result column="created" property="created" jdbcType="TIMESTAMP" />
    <result column="learn_html" jdbcType="LONGVARCHAR" property="learnHtml" />
    <result column="learn_context" jdbcType="LONGVARCHAR" property="learnContext" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
  </resultMap>

  <select id="findLearn" parameterType="com.daily.search.LearnSearch"  resultMap="BaseResultMap">
    select * from learn as d
    left join user_info on user_info.user_id = d.user_id
    <include refid="learn_sql"/>
    <if test="orderCause != null ">
      order by ${orderCause}
    </if>
    <if test="page != null">
      limit #{page.begin},#{page.length}
    </if>
  </select>
  <select id="count4FindLearn" parameterType="com.daily.search.LearnSearch" resultType="int">
    select count(*) from (
    select * from learn as d
    <include refid="learn_sql"/>
    )t
  </select>
  <sql id="learn_sql">
    <where>
      <if test="userId">
        and  d.user_id=#{userId}
      </if>
      <if test="statusId">
        and  d.status_id=#{statusId}
      </if>
      <if test="learnId">
        and  d.learn_id=#{learnId}
      </if>
      <if test="keywords != null ">
        and (
        d.learn_context like #{keywordsLike}
        or d.learn_title like #{keywordsLike}
        or d.tag like #{keywordsLike}
        )
      </if>
--       group by d.learn_id
    </where>
  </sql>
</mapper>